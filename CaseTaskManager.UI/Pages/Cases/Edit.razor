@page "/cases/edit/{Id:int}"

<h3>Edit Case</h3>

@if (loading)
{
    <p><em>Loading...</em></p>
}
else if (model is null)
{
    <p class="text-danger">Case not found.</p>
}
else
{
    <EditForm Model="@model" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-3">
            <label class="form-label">Title</label>
            <InputText @bind-Value="model.Title" class="form-control" />
            <ValidationMessage For="@(() => model!.Title)" />
        </div>

        <div class="mb-3">
            <label class="form-label">Description</label>
            <InputTextArea @bind-Value="model.Description" class="form-control" />
            <ValidationMessage For="@(() => model!.Description)" />
        </div>

        <div class="mb-3">
            <label class="form-label">Status</label>
            <InputSelect @bind-Value="model.StatusId" class="form-select">
                <option value="">-- Select status --</option>
                @if (caseStatuses?.Any() == true)
                {
                    @foreach (var s in caseStatuses)
                    {
                        <option value="@s.Id">@s.StatusName</option>
                    }
                }
            </InputSelect>
            <ValidationMessage For="@(() => model!.StatusId)" />
        </div>

        <button type="submit" class="btn btn-primary" disabled="@saving">
            @(saving ? "Saving..." : "Save Changes")
        </button>
        <button type="button" class="btn btn-secondary ms-2" @onclick="Cancel">Cancel</button>

        @if (!string.IsNullOrWhiteSpace(error))
        {
            <div class="alert alert-danger mt-3">@error</div>
        }
    </EditForm>
}
